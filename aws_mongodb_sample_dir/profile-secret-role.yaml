AWSTemplateFormatVersion: '2010-09-09'
Description: MongoDB Atlas AWS CloudFormation for building a, secret profile with ApiKeys
# This YAML file is created based on the templates for AWS CDK for MongoDB ATLAS. 

# Ref: https://github.com/mongodb/awscdk-resources-mongodbatlas/blob/main/examples/profile-secret.yaml
# Ref: https://github.com/mongodb/mongodbatlas-cloudformation-resources/blob/master/examples/execution-role.yaml


Parameters:
  ProfileName:
    Description: "Your MongoDB Atlas Profile Name : Keep this value Default"
    Type: String
    Default: "default"
  ATLASORGID:
    Description: "Your MongoDB Atlas Organization ID"
    Type: String
    Default: "Enter the MongoDB ATLAS Organization ID"
  PublicKey:
    Description: "Your MongoDB Atlas Public API Key"
    Type: String
    Default: "Enter your MongoDB Atlas Public API Key"
  PrivateKey:
    Description: "Your MongoDB Atlas Private API Key"
    Type: String
    Default: "Enter your MongoDB Atlas Private API Key"
  MONGODBUSER:
    Description: "MongoDB User for AWS Activate Startup"
    Type: String
    Default: "aws_activate_startup"
  MONGODBPASSWORD:
    Description: "MongoDB User for AWS Activate Startup"
    Type: String
    Default: "change the password"
  AWSACCOUNTID:
    Description: "AWS Account ID"
    Type: String
    Default: "Enter your AWS Account ID"
Resources:
  AtlasApiKeySecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub "cfn/atlas/profile/${ProfileName}"
      Description: MongoDB Atlas API Key
      SecretString: !Join ['', ['{"PublicKey":"', !Ref "PublicKey", '","PrivateKey":"', !Ref "PrivateKey", '", "AWSACCOUNTID":"', !Ref "AWSACCOUNTID", '", "ATLASORGID":"', !Ref "ATLASORGID", '", "MONGODBUSER":"', !Ref "MONGODBUSER", '", "MONGODBPASSWORD":"', !Ref "MONGODBPASSWORD", '"}']]
      Tags:
      - Key: mongodb-atlas-profile-keys
        Value: !Sub "${AWS::StackName}"
      - Key: Project 
        Value: aws-activate-startup
# this is the yaml file for the role creation for the aws cdk for mongodb atlas.
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      MaxSessionDuration: 8400
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
                - resources.cloudformation.amazonaws.com
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: ResourceTypePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                  - "secretsmanager:PutSecretValue"
                  - "ec2:CreateVpcEndpoint"
                  - "ec2:DeleteVpcEndpoints"
                  - "cloudformation:CreateResource"
                  - "cloudformation:DeleteResource"
                  - "cloudformation:GetResource"
                  - "cloudformation:GetResourceRequestStatus"
                  - "cloudformation:ListResources"
                  - "cloudformation:UpdateResource"
                  - "iam:AttachRolePolicy"
                  - "iam:CreateRole"
                  - "iam:DeleteRole"
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "iam:ListAttachedRolePolicies"
                  - "iam:ListRolePolicies"
                  - "iam:PutRolePolicy"
                Resource: "*"
Outputs:
  cfnactivation:
    Value:
      Fn::GetAtt: ExecutionRole.Arn